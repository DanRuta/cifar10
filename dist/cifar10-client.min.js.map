{"version":3,"sources":["cifar10-client.es5.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","CIFAR10","this","value","training","test","fetch","method","body","JSON","stringify","then","r","json","dataCount","arguments","undefined","console","warn","data","context","inputData","input","map","v","imageDataBuffer","Uint8ClampedArray","rowI","colI","pos","imageData","createImageData","set","putImageData","stroke","categories","forEach","category","range","start","end","get","_ref2","index","indexList","type","Promise","resolve","reject","_ref3","_ref4","_ref5","count","_ref6","_ref7","window"],"mappings":"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","file":"cifar10-client.min.js","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n    var CIFAR10 = function () {\n        function CIFAR10() {\n            _classCallCheck(this, CIFAR10);\n        }\n\n        _createClass(CIFAR10, null, [{\n            key: \"set\",\n            value: function set(training, test) {\n                fetch(\"/set\", { method: \"Post\", body: JSON.stringify({ training: training, test: test }) }).then(function (r) {\n                    return r.json();\n                }).then(function () {\n                    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                        dataCount = _ref.dataCount;\n\n                    if (dataCount) {\n                        console.warn(\"Not enough data (\" + dataCount + \") for \" + training + \" training and \" + test + \" test items. Scaling down.\");\n                    }\n                });\n            }\n        }, {\n            key: \"reset\",\n            value: function reset() {\n                fetch(\"/reset\");\n            }\n        }, {\n            key: \"render\",\n            value: function render(data, context) {\n\n                var inputData = data.input.map(function (v) {\n                    return v * 255;\n                });\n                var imageDataBuffer = new Uint8ClampedArray(32 * 32 * 4);\n\n                for (var rowI = 0; rowI < 32; rowI++) {\n                    for (var colI = 0; colI < 32; colI++) {\n                        var pos = (rowI * 32 + colI) * 4;\n                        imageDataBuffer[pos] = inputData[rowI * 32 + colI];\n                        imageDataBuffer[pos + 1] = inputData[rowI * 32 + colI + 1024];\n                        imageDataBuffer[pos + 2] = inputData[rowI * 32 + colI + 2048];\n                        imageDataBuffer[pos + 3] = 255;\n                    }\n                }\n\n                var imageData = context.createImageData(32, 32);\n                imageData.data.set(imageDataBuffer);\n                context.putImageData(imageData, 0, 0);\n                context.stroke();\n            }\n        }]);\n\n        return CIFAR10;\n    }();\n\n    CIFAR10.categories = [\"airplane\", \"automobile\", \"bird\", \"cat\", \"deer\", \"dog\", \"frog\", \"horse\", \"ship\", \"truck\"];\n\n    CIFAR10.categories.forEach(function (category) {\n        CIFAR10[category] = {\n\n            range: function range(start, end) {\n                return fetch(\"/range\", {\n                    method: \"Post\",\n                    body: JSON.stringify({ category: category, start: start, end: end })\n                }).then(function (r) {\n                    return r.json();\n                });\n            },\n\n            training: {\n                get: function get() {\n                    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                        index = _ref2.index,\n                        indexList = _ref2.indexList;\n\n                    return fetch(\"/category.training.get\", {\n                        method: \"Post\",\n                        body: JSON.stringify({ category: category, index: index, indexList: indexList, type: \"training\" })\n                    }).then(function (r) {\n                        return r.json();\n                    });\n                },\n                length: function length() {\n                    return new Promise(function (resolve, reject) {\n                        fetch(\"/category.training.length\", {\n                            method: \"Post\",\n                            body: JSON.stringify({ category: category })\n                        }).then(function (r) {\n                            return r.json();\n                        }).then(function (_ref3) {\n                            var length = _ref3.length;\n                            return resolve(length);\n                        });\n                    });\n                }\n            },\n            test: {\n                get: function get() {\n                    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                        index = _ref4.index,\n                        indexList = _ref4.indexList;\n\n                    return fetch(\"/category.training.get\", {\n                        method: \"Post\",\n                        body: JSON.stringify({ category: category, index: index, indexList: indexList, type: \"test\" })\n                    }).then(function (r) {\n                        return r.json();\n                    });\n                },\n                length: function length() {\n                    return new Promise(function (resolve, reject) {\n                        fetch(\"/category.test.length\", {\n                            method: \"Post\",\n                            body: JSON.stringify({ category: category })\n                        }).then(function (r) {\n                            return r.json();\n                        }).then(function (_ref5) {\n                            var length = _ref5.length;\n                            return resolve(length);\n                        });\n                    });\n                }\n            }\n        };\n    });\n\n    CIFAR10.training = {\n        get: function get(count) {\n            return fetch(\"/training.get\", { method: \"Post\", body: JSON.stringify({ count: count }) }).then(function (r) {\n                return r.json();\n            });\n        },\n        length: function length() {\n            return new Promise(function (resolve, reject) {\n                fetch(\"/training.length\").then(function (r) {\n                    return r.json();\n                }).then(function (_ref6) {\n                    var length = _ref6.length;\n                    return resolve(length);\n                });\n            });\n        }\n    };\n    CIFAR10.test = {\n        get: function get(count) {\n            return fetch(\"/test.get\", { method: \"Post\", body: JSON.stringify({ count: count }) }).then(function (r) {\n                return r.json();\n            });\n        },\n        length: function length() {\n            return new Promise(function (resolve, reject) {\n                fetch(\"/test.length\").then(function (r) {\n                    return r.json();\n                }).then(function (_ref7) {\n                    var length = _ref7.length;\n                    return resolve(length);\n                });\n            });\n        }\n    };\n\n    window.CIFAR10 = CIFAR10;\n})();\n//# sourceMappingURL=cifar10-client.es5.js.map\n"]}